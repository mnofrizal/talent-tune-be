// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SystemRole {
  ADMINISTRATOR
  USER
}

enum AssessmentStatus {
  SCHEDULED
  WAITING_CONFIRMATION
  TALENT_REQUIREMENTS
  READY_FOR_ASSESSMENT
  EVALUATING
  NEED_REVIEW
  DONE
  CANCELED
  RESCHEDULE
}

enum EvaluationStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum MetodePelaksanaan {
  OFFLINE
  ONLINE
  HYBRID
}

model User {
  id           Int        @id @default(autoincrement())
  email        String     @unique
  phone        String?
  password     String
  name         String
  nip          String     @unique
  systemRole   SystemRole @default(USER)
  jabatan      String
  bidang       String
  refreshToken String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  // Relations
  assessmentsAsParticipant Assessment[] // User as participant
  evaluations              Evaluation[] // Evaluations made by the user

  @@index([email])
  @@index([nip])
}

model Assessment {
  id                Int               @id @default(autoincrement())
  judul             String
  materi            String
  proyeksi          String
  metodePelaksanaan MetodePelaksanaan
  ruangan           String?
  linkMeeting       String?
  notaDinas         String?
  schedule          DateTime // New field
  status            AssessmentStatus  @default(SCHEDULED)
  isActive          Boolean           @default(true)

  // Submission fields
  presentationFile       String?
  attendanceConfirmation Boolean @default(false)
  questionnaireResponses Json?

  // Relations
  participant   User         @relation(fields: [participantId], references: [id])
  participantId Int
  evaluations   Evaluation[] // Evaluations for this assessment

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([participantId])
  @@index([status])
  @@index([createdAt])
  @@index([schedule]) // Add index for schedule queries
}

model Evaluation {
  id             Int              @id @default(autoincrement())
  evaluator      User             @relation(fields: [evaluatorId], references: [id])
  evaluatorId    Int
  assessment     Assessment       @relation(fields: [assessmentId], references: [id])
  assessmentId   Int
  scores         Json? // Optional JSON field for scores
  recommendation String?          @db.Text
  status         EvaluationStatus @default(PENDING)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  @@unique([evaluatorId, assessmentId])
  @@index([evaluatorId])
  @@index([assessmentId])
  @@index([status])
}
